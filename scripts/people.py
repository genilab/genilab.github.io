"""
People Section Generator  
v0.1

Generates a Markdown file (people.md) containing structured HTML blocks  
for displaying categorized lab and collaborator profiles. Each section includes  
a heading and a responsive grid of profile cards with images, names, titles, and departments.

The layout follows a consistent design pattern and concludes with a 'Check Also' section  
linking to related pages.

Disclaimer:  
This script was 'vibe coded', a lightweight approach to quickly solving a specific need.  
The result has been revised and approved by a human.
"""

from datetime import datetime
from people_data import catalog

# === Utilities ===
def get_date_str():
    return datetime.now().strftime('%Y-%m-%d %H:%M')


# === Markdown Header and Footer ===

header = """![GenI-Lab Banner](./images/genilab-banner.png)\n"""

comment = f"""<!-- HTML generated by people.py on {get_date_str()} -->\n"""

footer = """
### Check Also

* [Topics of Interest](./projects.md#topics-of-interest)
* [Tutorials](./knowledge.md#tutorials)
* [Education](./knowledge.md#education)
* [Projects](./projects.md)
* [Resources](./projects.md#resources) 
* [Publications](./knowledge.md#publications)
* [Collaborate](./collaborate.md)
"""

person_card_template = '''  <div class="grid-item person-card">
    <img src="./images/people/{picture}">
    <div class="person-name"><a href="{link}">{name}</a></div>
    <div class="person-title">{role_dept}</div>
  </div>\n'''


# === HTML Generator ===

def generate_html_section(title, people):

    html = f"\n## {title}\n\n"
    html += f'<div class="grid-container" data-columns="3">\n'

    for person in people:
        html += person_card_template.format(
            picture=person["picture"],
            name=person["name"],
            link=person["link"],
            role_dept=f"{person.get('title', '')}, {person.get('department', '')}".strip(', ')
        )

    html += f'</div>'
    return html


# === Build the Markdown Content ===

output = header + "\n"
output += comment + "\n"

for section_title, people in catalog:
    output += generate_html_section(section_title, people) + "\n"

output += footer

# === Write to File ===

with open("./people.md", "w", encoding="utf-8") as f:
    f.write(output)

print("âœ… ./people.md generated successfully.")
